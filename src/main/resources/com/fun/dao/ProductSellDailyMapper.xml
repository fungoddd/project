<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fun.dao.ProductSellDailyMapper">
    <resultMap id="productSellDailyResultMap" type="com.fun.entity.ProductSellDaily">
        <id column="product_sell_daily_id" property="productSellDailyId"></id>
        <result column="create_time" property="createTime"></result>
        <result column="total" property="total"></result>
        <association property="product" column="product_id" javaType="com.fun.entity.Product">
            <id column="product_id" property="productId"></id>
            <result column="product_name" property="productName"></result>
        </association>
        <association property="shop" column="shop_id" javaType="com.fun.entity.Shop">
            <id column="shop_id" property="shopId"></id>
            <result column="shop_name" property="shopName"></result>
        </association>
    </resultMap>
    <!--通过查询条件获取商品日销售的统计列表-->
    <select id="selectProductSellDaily" resultMap="productSellDailyResultMap">
        SELECT
        psd.product_sell_daily_id,
        psd.create_time,
        psd.total,
        s.shop_id,
        s.shop_name,
        p.product_id,
        p.product_name
        FROM
        tb_product_sell_daily psd,
        tb_shop s,
        tb_product p
        <where>
            psd.shop_id=s.shop_id
            AND
            psd.product_id=p.product_id
            <!--通过商店id查询-->
            <if test="productSellDailyCondition.shop!=null and productSellDailyCondition.shop.shopId!=null">
                AND psd.shop_id=#{productSellDailyCondition.shop.shopId}
            </if>
            <!--通过商品名模糊查询-->
            <if test="productSellDailyCondition.product!=null and productSellDailyCondition.product.productName!=null">
                AND p.product_name LIKE CONCAT ('%',#{productSellDailyCondition.product.productName},'%')
            </if>
            <!--按照时间段查询-->
            <if test="beginTime!=null and endTime!=null">
                AND date_format(psd.create_time,'%Y-%m-%d') BETWEEN date_format(#{beginTime},'%Y-%m-%d')
                AND date_format(#{endTime},'%Y-%m-%d')
            </if>
            <if test="beginTime!=null and endTime==null">
                AND date_format(psd.create_time,'%Y-%m-%d')
                &gt;=date_format(#{beginTime},'%Y-%m-%d')<!--大于号小于号用转义字符,否则会和if冲突-->
            </if>
            <if test="beginTime==null and endTime!=null">
                AND date_format(psd.create_time,'%Y-%m-%d') &lt;=date_format(#{endTime},'%Y-%m-%d')
            </if>
        </where>
        ORDER BY
        psd.product_id,psd.create_time
    </select>
    <!--统计平台所有商品的日销量-->
    <insert id="insertProductSellDaily" parameterType="com.fun.entity.ProductSellDaily">
        INSERT INTO
        tb_product_sell_daily
        (
        product_id,
        shop_id,
        create_time,
        total
        )
        (
        SELECT
        product_id,
        shop_id,
        date_format(create_time,'%Y-%m-%d'),<!--只插入精确到日-->
        COUNT(product_id) AS total<!--统计销量-->
        FROM tb_user_product_map<!--添加的数据来自tb_user_product_map顾客消费商品映射-->
        WHERE                                                  <!--隔一天-->
        date_format(create_time,'%Y-%m-%d')=date_sub(curdate(),INTERVAL 1 DAY )<!--精确到年月日,第二天才统计上一天的销量-->
        GROUP BY
        product_id<!--按照商品分类统计-->
        )
    </insert>
    <!--默认销量插入默认0-->
    <insert id="insertDefaultProductSellDaily">
        INSERT INTO
        tb_product_sell_daily
        (
        product_id,
        shop_id,
        create_time,
        total
        )
        (
        SELECT
        p.product_id,
        p.shop_id,
        date_sub(curdate(),INTERVAL 1 DAY),0 AS total
        FROM
        tb_product p
        WHERE
        p.product_id
        NOT IN
        (
        SELECT product_id FROM tb_product_sell_daily
        WHERE
        date_format(create_time,'%Y-%m-%d')=date_sub(curdate(),INTERVAL 1 DAY )
        )
        )
    </insert>
</mapper>